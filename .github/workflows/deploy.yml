name: Deploy User Management

on:
  push:
    branches:
      - WILLIAN
  workflow_dispatch:

jobs:
  deploy-to-willian:
    name: Deploy to EC2 (WILLIAN)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Pull latest changes from WILLIAN
        run: ssh ubuntu@${{ secrets.EC2_HOST }} "sudo bash -c 'cd /root/distributed-app/backend/User-Management && git pull origin WILLIAN'"

      - name: Restart Docker containers
        run: ssh ubuntu@${{ secrets.EC2_HOST }} "sudo bash -c 'cd /root/distributed-app/backend/User-Management && docker-compose up --build -d'"

  approval-for-qa:
    name: Await Manual Approval
    needs: deploy-to-willian
    runs-on: ubuntu-latest

    steps:
      - name: Await approval before merging to QA
        run: echo "✅ Waiting for manual approval in GitHub Actions UI."
        
      - name: Pause for Manual Approval
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.EC2_TOKEN_GIT }}

  merge-to-qa:
    name: Merge WILLIAN into QA (if approved)
    needs: approval-for-qa
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout repository (Only WILLIAN)
        uses: actions/checkout@v3
        with:
          ref: WILLIAN  # ✅ Solo clona la rama WILLIAN
          fetch-depth: 1  # ✅ Solo trae el último commit (más eficiente)

      - name: Set Git User Identity  # ✅ Soluciona el error de identidad
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Fetch QA branch  # ✅ Obtiene SOLO la rama QA, sin clonar todo el repo
        run: |
          git fetch origin QA || echo "Branch QA not found"
          if ! git rev-parse --verify QA >/dev/null 2>&1; then
            git checkout -b QA
            git push origin QA
          else
            git checkout QA
          fi

      - name: Merge WILLIAN into QA (Approved)
        run: |
          git merge WILLIAN --no-ff -m "Merge approved changes from WILLIAN to QA"
          git push origin QA
