name: Deploy to EC2 & Auto PR to QA

on:
  push:
    branches:
      - WILLIAN  # 🚀 Se ejecuta cuando hay cambios en la rama WILLIAN

jobs:
  deploy-to-ec2:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Update Code on EC2 and Restart Services
        run: |
          ssh ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          echo "🚀 Conectado a EC2, actualizando código..."
          cd /distributed-app/backend/User-Management  # 🔥 Se asegura de estar en el directorio correcto
          git fetch origin
          git checkout WILLIAN
          git reset --hard origin/WILLIAN
          git pull origin WILLIAN
          echo "✅ Código actualizado correctamente."

          echo "🚀 Reconstruyendo contenedores..."
          docker-compose up --build -d  # 🔥 Ejecuta el `docker-compose up --build` en la ruta correcta
          echo "✅ Contenedores actualizados correctamente."
          EOF

  create-pull-request:
    name: Create PR from WILLIAN to QA
    needs: deploy-to-ec2  # 🔥 Se ejecuta solo después de actualizar EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Asegura que tenemos todo el historial

      - name: Fetch All Branches
        run: |
          git fetch --all  # 🔥 Descarga todas las referencias remotas
          git branch -r    # 🔥 Lista las ramas remotas para verificar

      - name: Ensure QA Branch Exists
        run: |
          if ! git show-ref --quiet refs/remotes/origin/QA; then
            echo "❌ Error: La rama QA no existe en el repositorio remoto."
            exit 1
          fi

      - name: Create Temporary Branch for PR
        run: |
          git checkout -b temp-willian-qa origin/WILLIAN
          git push origin temp-willian-qa

      - name: Check if There Are Changes
        run: |
          git fetch origin QA  # 🔥 Asegura que tenemos la última versión de QA
          if git diff --quiet origin/QA..temp-willian-qa; then
            echo "🚀 No hay cambios nuevos entre WILLIAN y QA. No se creará un PR."
            exit 0  # 🔥 Detiene el workflow sin error
          fi

      - name: Close Existing PR (If Any)
        run: |
          EXISTING_PR=$(gh pr list --base QA --head temp-willian-qa --json number --jq '.[0].number')
          if [[ -n "$EXISTING_PR" ]]; then
            echo "🚀 Cerrando PR existente: #$EXISTING_PR"
            gh pr close "$EXISTING_PR" --delete-branch
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Create Pull Request Manually
        run: |
          gh pr create --base QA --head temp-willian-qa --title "🚀 PR: Merge WILLIAN into QA" --body "Este PR requiere revisión y aprobación manual."
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}  # 🔥 Se usa el PAT con permisos de escritura
