version: "3.8"

services:
  app_create:
    build:
      context: ./create_booking
      dockerfile: Dockerfile
    image: booking-management-app:latest
    container_name: app_create_booking
    volumes:
      - ./create_booking:/app
    ports:
      - "5021:5021"
    networks:
      - booking-management-net
    working_dir: /app
    environment:
      - DATABASE_URL=postgresql://postgres:D1str1bu1D4.@booking-management-db.c7u4ume2skf9.us-east-1.rds.amazonaws.com:5432/booking_management
    command: ["python", "app.py"]
    restart: always

  app_get:
    build:
      context: ./get_booking
      dockerfile: Dockerfile
    image: booking-management-app:latest
    container_name: app_get_booking
    volumes:
      - ./get_booking:/app
    ports:
      - "5022:5022"
    networks:
      - booking-management-net
    working_dir: /app
    environment:
      - DATABASE_URL=postgresql://postgres:D1str1bu1D4.@booking-management-db.c7u4ume2skf9.us-east-1.rds.amazonaws.com:5432/booking_management
    command: ["python", "app.py"]
    restart: always
  
  app_update:
    build:
      context: ./update_booking
      dockerfile: Dockerfile
    image: booking-management-app:latest
    container_name: app_update_booking
    volumes:
      - ./update_booking:/app
    ports:
      - "5023:5023"
    networks:
      - booking-management-net
    working_dir: /app
    environment:
      - DATABASE_URL=postgresql://postgres:D1str1bu1D4.@booking-management-db.c7u4ume2skf9.us-east-1.rds.amazonaws.com:5432/booking_management
    command: ["python", "app.py"]
    restart: always

  app_delete:
    build:
      context: ./delete_booking
      dockerfile: Dockerfile
    image: booking-management-app:latest
    container_name: app_delete_booking
    volumes:
      - ./delete_booking:/app
    ports:
      - "5024:5024"
    networks:
      - booking-management-net
    working_dir: /app
    environment:
      - DATABASE_URL=postgresql://postgres:D1str1bu1D4.@booking-management-db.c7u4ume2skf9.us-east-1.rds.amazonaws.com:5432/booking_management
    command: ["python", "app.py"]
    restart: always

networks:
  booking-management-net:
    driver: bridge
